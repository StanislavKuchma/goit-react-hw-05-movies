{"version":3,"file":"static/js/830.8eb2fc8a.chunk.js","mappings":"qQAuBA,EArBgB,WACd,MCCgC,WAChC,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAU,mCAAG,8GAEOC,EAAAA,EAAAA,IAAgBX,GAFvB,OAETG,EAFS,OAGfC,EAAWD,EAAQS,SAHJ,gDAKfN,EAAS,KAAIO,SALE,yBAOfL,GAAa,GAPE,4EAAH,qDAUhBE,MACC,CAACV,IACG,CAAEG,QAAAA,EAASE,MAAAA,EAAOE,UAAAA,GDrBaO,GAA9BX,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAOE,EAAxB,EAAwBA,UACxB,OACE,gCACGA,IAAa,uCACbF,IAAS,wBAAKA,IACdF,EAAQY,OAAS,GAChB,wBACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOjB,UAOpB,yE,0MEhBRoB,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAS,mCAAG,0GACAF,IAAAA,IAAA,oCAAuCC,IADvC,uBACfE,EADe,EACfA,KACFC,EAAQD,EAAKX,QACba,EAASD,EAAMR,KAAI,kBAAmC,CAC1DhB,GADuB,EAAGA,GAE1B0B,eAFuB,EAAOA,eAG9BC,KAHuB,EAAuBA,SAHzB,kBAShBF,GATgB,2CAAH,qDAYTG,EAAQ,mCAAG,WAAMD,GAAN,6FACCP,IAAAA,IAAA,gCACIC,EADJ,kBACqBM,EADrB,YADD,uBACdJ,EADc,EACdA,KAGFC,EAAQD,EAAKX,QACba,EAASD,EAAMR,KAAI,kBAA6B,CACpDhB,GADuB,EAAGA,GAE1B0B,eAFuB,EAAOA,mBALV,kBASfD,GATe,2CAAH,sDAYRI,EAAe,mCAAG,WAAMC,GAAN,2FACNV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAwCT,IADlC,uBACrBE,EADqB,EACrBA,KACFQ,EAAQR,EAFe,kBAGtBQ,GAHsB,2CAAH,sDAMfC,EAAe,mCAAG,WAAMF,GAAN,2FACNV,IAAAA,IAAA,iBACXU,EADW,4BACiBT,IAFX,uBACrBE,EADqB,EACrBA,KAGFQ,EAAQR,EAJe,kBAKtBQ,GALsB,2CAAH,sDAQfpB,EAAe,mCAAG,WAAMmB,GAAN,2FACNV,IAAAA,IAAA,iBACXU,EADW,4BACiBT,IAFX,uBACrBE,EADqB,EACrBA,KAGFQ,EAAQR,EAJe,kBAKtBQ,GALsB,2CAAH","sources":["pages/Reviews.jsx","Hooks/useGetMovieReviews.js","service/movies-service.js"],"sourcesContent":["import { useGetMovieReviews } from 'Hooks/useGetMovieReviews';\n\nconst Reviews = () => {\n  const { reviews, error, isLoading } = useGetMovieReviews();\n  return (\n    <>\n      {isLoading && <h1>LOADING...</h1>}\n      {error && <h1>{error}</h1>}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h3>We don't have any review for this movie</h3>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../service/movies-service';\n\nexport const useGetMovieReviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getCountry = async () => {\n      try {\n        const reviews = await getMovieReviews(id);\n        setReviews(reviews.results);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCountry();\n  }, [id]);\n  return { reviews, error, isLoading };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '3e6b5a16db2403137fa9f14ae47f28f4';\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  const data1 = data.results;\n  const movies = data1.map(({ id, original_title, name }) => ({\n    id: id,\n    original_title: original_title,\n    name: name,\n  }));\n\n  return movies;\n};\n\nexport const getMovie = async name => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${name}&page=1`\n  );\n  const data1 = data.results;\n  const movies = data1.map(({ id, original_title }) => ({\n    id: id,\n    original_title: original_title,\n  }));\n  return movies;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n  const movie = data;\n  return movie;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  const movie = data;\n  return movie;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  const movie = data;\n  return movie;\n};\n\n// export const getMovieCredits = async movie_id => {\n//   const { data } = await axios.get(\n//     `/movie/${movie_id}/credits?api_key=${API_KEY}`\n//   );\n//   const data1 = data.results;\n//   const countries = data1.map(({ id, original_title }) => ({\n//     id: id,\n//     original_title: original_title,\n//   }));\n\n//   return countries;\n// };\n\n// export const getMovieReviews = async movie_id => {\n//   const { data } = await axios.get(\n//     `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n//   );\n//   const data1 = data.results;\n//   const countries = data1.map(({ id, original_title }) => ({\n//     id: id,\n//     original_title: original_title,\n//   }));\n\n//   return countries;\n// };\n\n// export async function fetchMovieDetails(movie_id) {\n//   return await axios(`/movie/${movie_id}?api_key=${API_KEY}&language=en-US`);\n// }\n\n// export async function fetchMovieCredits(movie_id) {\n//   return await axios(\n//     `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n//   );\n// }\n\n// export async function fetchMovieReviews(movie_id) {\n//   return await axios(\n//     `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//   );\n// }\n"],"names":["id","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","getCountry","getMovieReviews","results","message","useGetMovieReviews","length","map","review","author","content","axios","API_KEY","getMovies","data","data1","movies","original_title","name","getMovie","getMovieDetails","movie_id","movie","getMovieCredits"],"sourceRoot":""}